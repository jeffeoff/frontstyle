/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
html {
  box-sizing: border-box;
  font-size: 18px; }

*,
*::after,
*::before {
  box-sizing: inherit; }

body {
  line-height: 1.4;
  font-family: -apple-system, ".SFNSText-Regular", "San Francisco", "Roboto", "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;
  color: #222;
  background-color: #fff;
  margin: 36px; }

h1, h2, h3, p {
  margin-bottom: 18px; }

h1, h2, h3, h4 {
  line-height: 1.0; }

h1 {
  font-size: 3rem;
  font-weight: 700; }

h2 {
  font-size: 2.5rem; }

h3 {
  font-size: 2rem; }

h4 {
  font-size: 1.5rem; }

h5 {
  font-size: 1rem; }

b, strong, h4 {
  font-weight: 700; }

h5 {
  font-weight: 300; }

em, i {
  font-style: italic; }

small {
  font-size: 0.8em; }

big {
  font-size: 1.2em; }

code,
pre {
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  color: #cb3736; }

section {
  margin-bottom: 36px; }

a {
  text-decoration: none;
  color: #285b76;
  -webkit-tap-highlight-color: transparent;
  transition: all 0.3s; }
  a:hover {
    text-decoration: underline;
    color: #4495c0; }

.indent {
  margin-left: 18px; }

.list {
  margin: 0 0 0 18px;
  padding: 0; }
  .list li {
    list-style-type: disc;
    margin-left: 18px;
    margin-bottom: 18px; }

.list.square li {
  list-style-type: square; }

.list.number li {
  list-style-type: decimal; }

.panel {
  display: block;
  padding: 18px;
  margin-bottom: 18px;
  background-color: #e4e4e4;
  border-radius: 9px;
  border: 1px solid #bbb; }

.sprite,
.sprite2x {
  display: inline-block;
  margin: 18px; }

.sprite.monster {
  background-image: url("../images/sprites.png");
  background-position: 0px -332px;
  width: 150px;
  height: 150px;
  background-repeat: no-repeat; }

.sprite.bigphoto {
  background-image: url("../images/sprites.png");
  background-position: 0px 0px;
  width: 500px;
  height: 332px;
  background-repeat: no-repeat; }

.sprite.sun {
  background-image: url("../images/sprites.png");
  background-position: -150px -332px;
  width: 43px;
  height: 43px;
  background-repeat: no-repeat; }

.sprite2x.monster {
  background-image: url("../images/sprites.png");
  background-position: 0px -332px;
  width: 150px;
  height: 150px;
  background-repeat: no-repeat; }
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .sprite2x.monster {
      background-image: url("../images/sprites@2x.png");
      background-size: 500px 482px; } }

.sprite2x.bigphoto {
  background-image: url("../images/sprites.png");
  background-position: 0px 0px;
  width: 500px;
  height: 332px;
  background-repeat: no-repeat; }
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .sprite2x.bigphoto {
      background-image: url("../images/sprites@2x.png");
      background-size: 500px 482px; } }

.sprite2x.sun {
  background-image: url("../images/sprites.png");
  background-position: -150px -332px;
  width: 43px;
  height: 43px;
  background-repeat: no-repeat; }
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .sprite2x.sun {
      background-image: url("../images/sprites@2x.png");
      background-size: 500px 482px; } }

/*# sourceMappingURL=data:application/json;base64, */
